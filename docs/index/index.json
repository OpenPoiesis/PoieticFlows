{
  "includedArchiveIdentifiers" : [
    "PoieticFlows"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "children" : [
              {
                "title" : "Model and Traits",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowsmetamodel",
                "title" : "let FlowsMetamodel: Metamodel",
                "type" : "var"
              }
            ],
            "path" : "\/documentation\/poieticflows\/metamodel",
            "title" : "Stock and Flow Metamodel",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Simulator",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/init(model:solvertype:)",
                    "title" : "init(model: CompiledModel, solverType: Solver.Type)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/compiledmodel",
                    "title" : "var compiledModel: CompiledModel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/currentstate",
                    "title" : "var currentState: SimulationState!",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/currentstep",
                    "title" : "var currentStep: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/currenttime",
                    "title" : "var currentTime: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/initialtime",
                    "title" : "var initialTime: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/output",
                    "title" : "var output: [SimulationState]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/solver",
                    "title" : "var solver: Solver",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/solvertype",
                    "title" : "var solverType: Solver.Type",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/timedelta",
                    "title" : "var timeDelta: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/timepoints",
                    "title" : "var timePoints: [Double]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/dataseries(index:)",
                    "title" : "func dataSeries(index: Int) -> [Double]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/initializestate(override:)",
                    "title" : "func initializeState(override: [ObjectID : Double]) throws -> SimulationState",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/run(_:)",
                    "title" : "func run(Int) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulator\/step()",
                    "title" : "func step() throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulator",
                "title" : "Simulator",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/init(_:model:)",
                    "title" : "init([Variant], model: CompiledModel)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/init(model:)",
                    "title" : "init(model: CompiledModel)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/model",
                    "title" : "let model: CompiledModel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/values",
                    "title" : "var values: [Variant]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/double(at:)",
                    "title" : "func double(at: SimulationState.Index) -> Double",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/subscript(_:)",
                    "title" : "subscript(SimulationState.Index) -> Variant",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationstate\/index",
                    "title" : "SimulationState.Index",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationstate",
                "title" : "SimulationState",
                "type" : "struct"
              },
              {
                "title" : "Solver",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/init(_:)",
                    "title" : "init(CompiledModel)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/compiledmodel",
                    "title" : "let compiledModel: CompiledModel",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/constants",
                    "title" : "var constants: [ObjectID : Variant]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/accumulatestocks(_:delta:)",
                    "title" : "func accumulateStocks(inout SimulationState, delta: NumericVector)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/compute(_:at:timedelta:)",
                    "title" : "func compute(SimulationState, at: Double, timeDelta: Double) throws -> SimulationState",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/computestockdelta(_:at:with:)",
                    "title" : "func computeStockDelta(CompiledStock, at: Double, with: inout SimulationState) throws -> Double",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/evaluate(delay:with:)",
                    "title" : "func evaluate(delay: CompiledDelay, with: inout SimulationState) throws -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/evaluate(expression:with:)",
                    "title" : "func evaluate(expression: BoundExpression, with: SimulationState) throws -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/evaluate(objectat:with:)",
                    "title" : "func evaluate(objectAt: Int, with: inout SimulationState) throws -> Variant",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/initializestate(override:time:timedelta:)",
                    "title" : "func initializeState(override: [ObjectID : Double], time: Double, timeDelta: Double) throws -> SimulationState",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/stockdifference(state:at:timedelta:)",
                    "title" : "func stockDifference(state: SimulationState, at: Double, timeDelta: Double) throws -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/updatebuiltins(_:time:timedelta:)",
                    "title" : "func updateBuiltins(inout SimulationState, time: Double, timeDelta: Double)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/variables",
                    "title" : "static let Variables: [Variable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/registeredsolvernames",
                    "title" : "static var registeredSolverNames: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/registeredsolvers",
                    "title" : "static var registeredSolvers: [String : Solver.Type]",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/solver\/registersolver(name:solver:)",
                    "title" : "static func registerSolver(name: String, solver: Solver.Type)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/solver",
                "title" : "Solver",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/eulersolver\/compute(_:at:timedelta:)",
                    "title" : "func compute(SimulationState, at: Double, timeDelta: Double) throws -> SimulationState",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/eulersolver",
                "title" : "EulerSolver",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/rungekutta4solver\/compute(_:at:timedelta:)",
                    "title" : "func compute(SimulationState, at: Double, timeDelta: Double) throws -> SimulationState",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/rungekutta4solver",
                "title" : "RungeKutta4Solver",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/*(_:_:)-402xh",
                    "title" : "static func * (Double, NumericVector) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/*(_:_:)-9sb44",
                    "title" : "static func * (NumericVector, Double) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/+(_:_:)",
                    "title" : "static func + (NumericVector, NumericVector) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/-(_:_:)",
                    "title" : "static func - (NumericVector, NumericVector) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/_(_:_:)",
                    "title" : "static func \/ (NumericVector, Double) -> NumericVector",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/init(_:)",
                    "title" : "init([Double])",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/init(zerocount:)",
                    "title" : "init(zeroCount: Int)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/endindex",
                    "title" : "var endIndex: Array<Double>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/startindex",
                    "title" : "var startIndex: Array<Double>.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/values",
                    "title" : "var values: [Double]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/adding(_:)",
                    "title" : "func adding(NumericVector) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/divided(by:)",
                    "title" : "func divided(by: Double) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/index(after:)",
                    "title" : "func index(after: NumericVector.Index) -> NumericVector.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/multiplied(by:)",
                    "title" : "func multiplied(by: Double) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/subtracting(_:)",
                    "title" : "func subtracting(NumericVector) -> NumericVector",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/subscript(_:)",
                    "title" : "subscript(NumericVector.Index) -> Double",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/numericvector\/index",
                    "title" : "NumericVector.Index",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/last",
                        "title" : "var last: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/difference(from:)",
                        "title" : "func difference<C>(from: C) -> CollectionDifference<Self.Element>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/difference(from:by:)",
                        "title" : "func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstrange(of:)-319xv",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(before:)",
                        "title" : "func formIndex(before: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/last(where:)",
                        "title" : "func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lastindex(of:)",
                        "title" : "func lastIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lastindex(where:)",
                        "title" : "func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/reversed()",
                        "title" : "func reversed() -> ReversedCollection<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/bidirectionalcollection-implementations",
                    "title" : "BidirectionalCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/underestimatedcount",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/firstrange(of:)-3lj26",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/indices(of:)",
                        "title" : "func indices(of: Self.Element) -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/indices(where:)",
                        "title" : "func indices(where: (Self.Element) throws -> Bool) rethrows -> RangeSet<Self.Index>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/map(_:)-8ai8o",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/removingsubranges(_:)",
                        "title" : "func removingSubranges(RangeSet<Self.Index>) -> DiscontiguousSlice<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/randomaccesscollection-implementations",
                    "title" : "RandomAccessCollection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/count(where:)",
                        "title" : "func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/filter(_:)-2sb5x",
                        "title" : "func filter(Predicate<Self.Element>) throws -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/filter(_:)-3aagh",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/flatmap(_:)-2bzlk",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/flatmap(_:)-80l3w",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lexicographicallyprecedes(_:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/map(_:)-ttnw",
                        "title" : "func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/max()",
                        "title" : "func max() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/min()",
                        "title" : "func min() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted()",
                        "title" : "func sorted() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted(using:)-7yd1c",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/sorted(using:)-szeq",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/numericvector\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/numericvector\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/numericvector",
                "title" : "NumericVector",
                "type" : "struct"
              },
              {
                "title" : "Formulas",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/time",
                    "title" : "case time",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/timedelta",
                    "title" : "case timeDelta",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/builtinvariable\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/builtinvariable",
                "title" : "BuiltinVariable",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/argumenttypemismatch(_:_:)",
                    "title" : "case argumentTypeMismatch(Int, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/invalidnumberofarguments(_:_:)",
                    "title" : "case invalidNumberOfArguments(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/missingarguments",
                    "title" : "case missingArguments",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/toomanyarguments",
                    "title" : "case tooManyArguments",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownfunction(_:)",
                    "title" : "case unknownFunction(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownvariable(_:)",
                    "title" : "case unknownVariable(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/expressionerror",
                "title" : "ExpressionError",
                "type" : "enum"
              },
              {
                "title" : "Functions",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/builtinunaryoperators",
                "title" : "let BuiltinUnaryOperators: [Function]",
                "type" : "var"
              },
              {
                "path" : "\/documentation\/poieticflows\/builtinbinaryoperators",
                "title" : "let BuiltinBinaryOperators: [Function]",
                "type" : "var"
              },
              {
                "path" : "\/documentation\/poieticflows\/builtinfunctions",
                "title" : "let BuiltinFunctions: [Function]",
                "type" : "var"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/graphicalfunction\/init(points:)",
                    "title" : "init(points: [Point])",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/graphicalfunction\/createfunction(name:)",
                    "title" : "func createFunction(name: String) -> Function",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/graphicalfunction\/stepfunction(x:)",
                    "title" : "func stepFunction(x: Double) -> Double",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/graphicalfunction",
                "title" : "GraphicalFunction",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/poieticflows\/simulation",
            "title" : "Simulation and Computation",
            "type" : "symbol"
          },
          {
            "children" : [
              {
                "title" : "Compiled Model",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/builtins",
                    "title" : "let builtins: [CompiledBuiltin]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/charts",
                    "title" : "let charts: [Chart]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/graphicalfunctions",
                    "title" : "var graphicalFunctions: [CompiledGraphicalFunction]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/simulationdefaults",
                    "title" : "var simulationDefaults: SimulationDefaults?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/simulationobjects",
                    "title" : "let simulationObjects: [SimulationObject]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/statevariables",
                    "title" : "let stateVariables: [StateVariable]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/stocks",
                    "title" : "let stocks: [CompiledStock]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/timevariableindex",
                    "title" : "let timeVariableIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/valuebindings",
                    "title" : "let valueBindings: [CompiledControlBinding]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/simulationobject(_:)",
                    "title" : "func simulationObject(ObjectID) -> SimulationObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/stockindex(_:)",
                    "title" : "func stockIndex(ObjectID) -> NumericVector.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/variable(named:)",
                    "title" : "func variable(named: String) -> SimulationObject?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledmodel\/variableindex(of:)",
                    "title" : "func variableIndex(of: ObjectID) -> SimulationState.Index?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledmodel",
                "title" : "CompiledModel",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationdefaults\/initialtime",
                    "title" : "let initialTime: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationdefaults\/simulationsteps",
                    "title" : "let simulationSteps: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationdefaults\/timedelta",
                    "title" : "let timeDelta: Double",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationdefaults",
                "title" : "SimulationDefaults",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/delay(_:)",
                    "title" : "case delay(CompiledDelay)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/formula(_:)",
                    "title" : "case formula(BoundExpression)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/graphicalfunction(_:_:)",
                    "title" : "case graphicalFunction(Function, SimulationState.Index)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/computationalrepresentation\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/computationalrepresentation",
                "title" : "ComputationalRepresentation",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/computation",
                    "title" : "let computation: ComputationalRepresentation",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/id",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/type",
                    "title" : "let type: SimulationObject.SimulationObjectType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationobject\/variableindex",
                    "title" : "let variableIndex: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/auxiliary",
                        "title" : "case auxiliary",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/flow",
                        "title" : "case flow",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/stock",
                        "title" : "case stock",
                        "type" : "case"
                      },
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/init(from:)",
                        "title" : "init(from: any Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/simulationobject\/simulationobjecttype",
                    "title" : "SimulationObject.SimulationObjectType",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationobject",
                "title" : "SimulationObject",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/content",
                    "title" : "let content: StateVariableContent",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/index",
                    "title" : "let index: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/name",
                    "title" : "let name: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/objectid",
                    "title" : "var objectID: ObjectID?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/type",
                    "title" : "var type: SimulationVariableType",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariable\/valuetype",
                    "title" : "let valueType: ValueType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/statevariable",
                "title" : "StateVariable",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/time",
                    "title" : "case time",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/timedelta",
                    "title" : "case timeDelta",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/builtinvariable\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/builtinvariable\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/builtinvariable",
                "title" : "BuiltinVariable",
                "type" : "enum"
              },
              {
                "path" : "\/documentation\/poieticflows\/compiledbuiltin",
                "title" : "CompiledBuiltin",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/allowsnegative",
                    "title" : "let allowsNegative: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/delayedinflow",
                    "title" : "let delayedInflow: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/id",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/inflows",
                    "title" : "let inflows: [SimulationState.Index]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/outflows",
                    "title" : "let outflows: [SimulationState.Index]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledstock\/variableindex",
                    "title" : "let variableIndex: SimulationState.Index",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledstock",
                "title" : "CompiledStock",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/duration",
                    "title" : "let duration: Double",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/initialvalue",
                    "title" : "let initialValue: Variant?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/parameterindex",
                    "title" : "let parameterIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/valuequeueindex",
                    "title" : "let valueQueueIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compileddelay\/valuetype",
                    "title" : "let valueType: ValueType",
                    "type" : "property"
                  },
                  {
                    "title" : "Enumerations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Enumeration Cases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/compileddelay\/outputtype\/delay",
                        "title" : "case delay",
                        "type" : "case"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/compileddelay\/outputtype\/smooth",
                        "title" : "case smooth",
                        "type" : "case"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Operators",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/poieticflows\/compileddelay\/outputtype\/!=(_:_:)",
                            "title" : "static func != (Self, Self) -> Bool",
                            "type" : "op"
                          }
                        ],
                        "path" : "\/documentation\/poieticflows\/compileddelay\/outputtype\/equatable-implementations",
                        "title" : "Equatable Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/compileddelay\/outputtype",
                    "title" : "CompiledDelay.OutputType",
                    "type" : "enum"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compileddelay",
                "title" : "CompiledDelay",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/function",
                    "title" : "let function: Function",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/id",
                    "title" : "let id: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/parameterindex",
                    "title" : "let parameterIndex: SimulationState.Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction\/variableindex",
                    "title" : "let variableIndex: SimulationState.Index",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledgraphicalfunction",
                "title" : "CompiledGraphicalFunction",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledcontrolbinding\/control",
                    "title" : "let control: ObjectID",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiledcontrolbinding\/variableindex",
                    "title" : "let variableIndex: SimulationState.Index",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiledcontrolbinding",
                "title" : "CompiledControlBinding",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationvariabletype\/builtin",
                    "title" : "case builtin",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationvariabletype\/object",
                    "title" : "case object",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/simulationvariabletype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationvariabletype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/simulationvariabletype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationvariabletype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/simulationvariabletype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/simulationvariabletype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationvariabletype",
                "title" : "SimulationVariableType",
                "type" : "enum"
              },
              {
                "title" : "Compiler",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/init(frame:)",
                    "title" : "init(frame: StableFrame)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/currentvariableindex",
                    "title" : "var currentVariableIndex: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/statevariables",
                    "title" : "var stateVariables: [StateVariable]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/appendissue(_:to:)",
                    "title" : "func appendIssue(any Error, to: ObjectID)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compile()",
                    "title" : "func compile() throws -> CompiledModel",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compile(_:in:)",
                    "title" : "func compile(Node, in: RuntimeContext) throws -> ComputationalRepresentation",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compiledelaynode(_:)",
                    "title" : "func compileDelayNode(Node) throws -> ComputationalRepresentation",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compileformulanode(_:in:)",
                    "title" : "func compileFormulaNode(Node, in: RuntimeContext) throws -> ComputationalRepresentation",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/compilegraphicalfunctionnode(_:)",
                    "title" : "func compileGraphicalFunctionNode(Node) throws -> ComputationalRepresentation",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/createstatevariable(content:valuetype:name:)",
                    "title" : "func createStateVariable(content: StateVariableContent, valueType: ValueType, name: String) -> SimulationState.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/stockadjacencies()",
                    "title" : "func stockAdjacencies() -> [StockAdjacency]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/validateparameters(_:required:)",
                    "title" : "func validateParameters(ObjectID, required: [String]) -> [NodeIssue]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/compiler\/variableindex(_:)",
                    "title" : "func variableIndex(ObjectID) -> SimulationState.Index",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/compiler",
                "title" : "Compiler",
                "type" : "class"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissueserror\/issues",
                    "title" : "var issues: [ObjectID : [any Error]]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/nodeissueserror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/nodeissueserror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/nodeissueserror",
                "title" : "NodeIssuesError",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/computationcycle",
                    "title" : "case computationCycle",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/duplicatename(_:)",
                    "title" : "case duplicateName(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/expressionerror(_:)",
                    "title" : "case expressionError(ExpressionError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/expressionsyntaxerror(_:)",
                    "title" : "case expressionSyntaxError(ExpressionSyntaxError)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/flowcycle",
                    "title" : "case flowCycle",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/missingrequiredparameter",
                    "title" : "case missingRequiredParameter",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/unknownparameter(_:)",
                    "title" : "case unknownParameter(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/unusedinput(_:)",
                    "title" : "case unusedInput(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/nodeissue\/hint",
                    "title" : "var hint: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/nodeissue\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/nodeissue\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/nodeissue\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/nodeissue\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/nodeissue",
                "title" : "NodeIssue",
                "type" : "enum"
              },
              {
                "title" : "Bound Expression",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/boundexpression",
                "title" : "BoundExpression",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/poieticflows\/boundvariable",
                "title" : "BoundVariable",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/argumenttypemismatch(_:_:)",
                    "title" : "case argumentTypeMismatch(Int, String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/invalidnumberofarguments(_:_:)",
                    "title" : "case invalidNumberOfArguments(Int, Int)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/missingarguments",
                    "title" : "case missingArguments",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/toomanyarguments",
                    "title" : "case tooManyArguments",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownfunction(_:)",
                    "title" : "case unknownFunction(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/unknownvariable(_:)",
                    "title" : "case unknownVariable(String)",
                    "type" : "case"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/expressionerror\/description",
                    "title" : "var description: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/poieticflows\/expressionerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/poieticflows\/expressionerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/expressionerror",
                "title" : "ExpressionError",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/poieticflows\/compiledmodelandcompiler",
            "title" : "Compiled Model and Compiler",
            "type" : "symbol"
          },
          {
            "title" : "View",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/init(_:)",
                "title" : "init(any Frame)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/charts",
                "title" : "var charts: [Chart]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/drainsedges",
                "title" : "var drainsEdges: [Edge]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/fillsedges",
                "title" : "var fillsEdges: [Edge]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/flownodes",
                "title" : "var flowNodes: [Node]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/frame",
                "title" : "let frame: any Frame",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/metamodel",
                "title" : "let metamodel: Metamodel",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/namedobjects",
                "title" : "var namedObjects: [(ObjectSnapshot, String)]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/parameteredges",
                "title" : "var parameterEdges: [Edge]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/simulationnodes",
                "title" : "var simulationNodes: [Node]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/statenodes",
                "title" : "var stateNodes: [Node]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/builtinreferences(names:)",
                "title" : "func builtinReferences(names: [String : ObjectID]) -> [String : StateVariableContent]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/drains(_:)",
                "title" : "func drains(ObjectID) -> Neighborhood",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/fills(_:)",
                "title" : "func fills(ObjectID) -> Neighborhood",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/flowdrains(_:)",
                "title" : "func flowDrains(ObjectID) -> ObjectID?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/flowfills(_:)",
                "title" : "func flowFills(ObjectID) -> ObjectID?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/incomingparameters(_:)",
                "title" : "func incomingParameters(ObjectID) -> Neighborhood",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/inflows(_:)",
                "title" : "func inflows(ObjectID) -> Neighborhood",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/objectvariablereferences(names:)",
                "title" : "func objectVariableReferences(names: [String : ObjectID]) -> [String : StateVariableContent]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/outflows(_:)",
                "title" : "func outflows(ObjectID) -> Neighborhood",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/parameters(_:required:)",
                "title" : "func parameters(ObjectID, required: [String]) -> [String : ParameterStatus]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/sortednodesbyparameter(_:)",
                "title" : "func sortedNodesByParameter([ObjectID]) throws -> [Node]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/stockinflows(_:)",
                "title" : "func stockInflows(ObjectID) -> [ObjectID]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockflowview\/stockoutflows(_:)",
                "title" : "func stockOutflows(ObjectID) -> [ObjectID]",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticflows\/stockflowview",
            "title" : "StockFlowView",
            "type" : "class"
          },
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/init(frame:)",
                "title" : "init(frame: any Frame)",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/arrowstyle(edge:)",
                "title" : "func arrowStyle(edge: ObjectSnapshot) -> ArrowStyle",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/boundingbox(node:)",
                "title" : "func boundingBox(node: ObjectSnapshot) -> Rect",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/connectororigincontact(_:)",
                "title" : "func connectorOriginContact(ObjectSnapshot) -> Point",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/connectorpoints(_:)",
                "title" : "func connectorPoints(ObjectSnapshot) -> [Point]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/connectortargetcontact(_:)",
                "title" : "func connectorTargetContact(ObjectSnapshot) -> Point",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/isvisible(_:)",
                "title" : "func isVisible(ObjectSnapshot) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/midpoints(_:)",
                "title" : "func midpoints(ObjectSnapshot) -> [Point]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/flowspresenter\/pictogram(node:)",
                "title" : "func pictogram(node: ObjectSnapshot) -> Pictogram",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticflows\/flowspresenter",
            "title" : "FlowsPresenter",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/init(_:width:height:magnets:)",
                "title" : "init(String, width: UInt, height: UInt?, magnets: [String : Magnet])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/height",
                "title" : "let height: UInt",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/magnets",
                "title" : "let magnets: [String : Magnet]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/width",
                "title" : "let width: UInt",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/defaultheight",
                "title" : "static let DefaultHeight: UInt",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/defaultsize",
                "title" : "static let DefaultSize: Size",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/pictogram\/defaultwidth",
                "title" : "static let DefaultWidth: UInt",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticflows\/pictogram",
            "title" : "Pictogram",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticflows\/simulationsystem\/didinitialize(_:)-1w2cj",
                        "title" : "func didInitialize(SimulationContext)",
                        "type" : "method"
                      }
                    ],
                    "title" : "SimulationSystem Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationsystem\/didinitialize(_:)-6c8up",
                "title" : "func didInitialize(SimulationContext)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticflows\/simulationsystem\/didrun(_:)-fpmf",
                        "title" : "func didRun(SimulationContext)",
                        "type" : "method"
                      }
                    ],
                    "title" : "SimulationSystem Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationsystem\/didrun(_:)-6pbgr",
                "title" : "func didRun(SimulationContext)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/poieticflows\/simulationsystem\/didstep(_:)-23fpu",
                        "title" : "func didStep(SimulationContext)",
                        "type" : "method"
                      }
                    ],
                    "title" : "SimulationSystem Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/simulationsystem\/didstep(_:)-2w0o0",
                "title" : "func didStep(SimulationContext)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticflows\/simulationsystem",
            "title" : "SimulationSystem",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/simulatordelegate\/simulatordidinitialize(_:context:)",
                "title" : "func simulatorDidInitialize(Simulator, context: SimulationContext)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/simulatordelegate\/simulatordidrun(_:context:)",
                "title" : "func simulatorDidRun(Simulator, context: SimulationContext)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/simulatordelegate\/simulatordidstep(_:context:)",
                "title" : "func simulatorDidStep(Simulator, context: SimulationContext)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticflows\/simulatordelegate",
            "title" : "SimulatorDelegate",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticflows\/arrowstyle",
            "title" : "ArrowStyle",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/chart\/init(node:series:)",
                "title" : "init(node: ObjectSnapshot, series: [ObjectSnapshot])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/chart\/node",
                "title" : "let node: ObjectSnapshot",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/chart\/series",
                "title" : "let series: [ObjectSnapshot]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticflows\/chart",
            "title" : "Chart",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/chartseries\/node",
                "title" : "let node: ObjectSnapshot",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticflows\/chartseries",
            "title" : "ChartSeries",
            "type" : "struct"
          },
          {
            "path" : "\/documentation\/poieticflows\/compilationcontext",
            "title" : "CompilationContext",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/connectorcomponent\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticflows\/connectorcomponent\/init(midpoints:)",
                "title" : "init(midpoints: [Point])",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/connectorcomponent\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/connectorcomponent\/midpoints",
                "title" : "var midpoints: [Point]",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticflows\/connectorcomponent",
            "title" : "ConnectorComponent",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/formulacompilersystem\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/formulacompilersystem\/update(_:)",
                "title" : "func update(RuntimeContext)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticflows\/formulacompilersystem",
            "title" : "FormulaCompilerSystem",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/init(parsedformula:)",
                "title" : "init(parsedFormula: UnboundExpression)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/parsedformula",
                "title" : "let parsedFormula: UnboundExpression",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/attribute(forkey:)",
                "title" : "func attribute(forKey: AttributeKey) -> Variant?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/parsedformulacomponent\/setattribute(value:forkey:)",
                "title" : "func setAttribute(value: Variant, forKey: AttributeKey) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticflows\/parsedformulacomponent",
            "title" : "ParsedFormulaComponent",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/init(centerx:centery:width:height:)",
                "title" : "init(centerX: Double, centerY: Double, width: Double, height: Double)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/init(min:max:)",
                "title" : "init(min: Point, max: Point)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/init(square:)",
                "title" : "init(square: Double)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/init(x:y:width:height:)",
                "title" : "init(x: Double, y: Double, width: Double, height: Double)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/center",
                "title" : "var center: Point",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/circumscribedcircleradius",
                "title" : "var circumscribedCircleRadius: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/height",
                "title" : "var height: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/inscribedcircleradius",
                "title" : "var inscribedCircleRadius: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/max",
                "title" : "var max: Point",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/min",
                "title" : "var min: Point",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/origin",
                "title" : "var origin: Point",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/size",
                "title" : "var size: Size",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/width",
                "title" : "var width: Double",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/contains(point:)",
                "title" : "func contains(point: Point) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/poieticflows\/rect\/offset(_:)",
                "title" : "func offset(Point) -> Rect",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/poieticflows\/rect",
            "title" : "Rect",
            "type" : "struct"
          },
          {
            "path" : "\/documentation\/poieticflows\/simulationcontext",
            "title" : "SimulationContext",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/size\/init(square:)",
                "title" : "init(square: Double)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/poieticflows\/size\/init(width:height:)",
                "title" : "init(width: Double, height: Double)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/size\/circumscribedcircleradius",
                "title" : "var circumscribedCircleRadius: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/size\/height",
                "title" : "var height: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/size\/inscribedcircleradius",
                "title" : "var inscribedCircleRadius: Double",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/size\/width",
                "title" : "var width: Double",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticflows\/size",
            "title" : "Size",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockadjacency\/id",
                "title" : "let id: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockadjacency\/origin",
                "title" : "let origin: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockadjacency\/target",
                "title" : "let target: ObjectID",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/stockadjacency\/targethasdelayedinflow",
                "title" : "let targetHasDelayedInflow: Bool",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/poieticflows\/stockadjacency",
            "title" : "StockAdjacency",
            "type" : "struct"
          },
          {
            "title" : "Functions",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticflows\/bindexpression(_:variables:names:functions:)",
            "title" : "func bindExpression(UnboundExpression, variables: [StateVariable], names: [String : SimulationState.Index], functions: [String : Function]) throws -> BoundExpression",
            "type" : "func"
          },
          {
            "title" : "Type Aliases",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/poieticflows\/parsedformula",
            "title" : "ParsedFormula",
            "type" : "typealias"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/arrowendpoint\/head",
                "title" : "case head",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticflows\/arrowendpoint\/tail",
                "title" : "case tail",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/arrowendpoint\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/arrowendpoint\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticflows\/arrowendpoint",
            "title" : "ArrowEndpoint",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/edgeissue\/computationcycle",
                "title" : "case computationCycle",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/edgeissue\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/poieticflows\/edgeissue\/hint",
                "title" : "var hint: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/edgeissue\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/edgeissue\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/edgeissue\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/edgeissue\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticflows\/edgeissue",
            "title" : "EdgeIssue",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/interpolationmethod\/step",
                "title" : "case step",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/interpolationmethod\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/interpolationmethod\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/interpolationmethod\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/interpolationmethod\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/interpolationmethod\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/interpolationmethod\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticflows\/interpolationmethod",
            "title" : "InterpolationMethod",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/magnet\/boundingbox",
                "title" : "case boundingBox",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticflows\/magnet\/boundingcircle",
                "title" : "case boundingCircle",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticflows\/magnet\/point(_:)",
                "title" : "case point(Point)",
                "type" : "case"
              }
            ],
            "path" : "\/documentation\/poieticflows\/magnet",
            "title" : "Magnet",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/parameterstatus\/missing",
                "title" : "case missing",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticflows\/parameterstatus\/unused(node:edge:)",
                "title" : "case unused(node: ObjectID, edge: ObjectID)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticflows\/parameterstatus\/used(node:edge:)",
                "title" : "case used(node: ObjectID, edge: ObjectID)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/parameterstatus\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/parameterstatus\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticflows\/parameterstatus",
            "title" : "ParameterStatus",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/statevariablecontent\/==(_:_:)",
                "title" : "static func == (StateVariableContent, StateVariableContent) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/statevariablecontent\/builtin(_:)",
                "title" : "case builtin(BuiltinVariable)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticflows\/statevariablecontent\/internalstate(_:)",
                "title" : "case internalState(ObjectID)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/poieticflows\/statevariablecontent\/object(_:)",
                "title" : "case object(ObjectID)",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/poieticflows\/statevariablecontent\/description",
                "title" : "var description: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/statevariablecontent\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/statevariablecontent\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/poieticflows\/statevariablecontent",
            "title" : "StateVariableContent",
            "type" : "enum"
          },
          {
            "title" : "Extended Modules",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Extended Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype\/scenario2",
                    "title" : "static let Scenario2: ObjectType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/objecttype",
                "title" : "ObjectType",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/trait\/parametervalue",
                    "title" : "static let ParameterValue: Trait",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/trait",
                "title" : "Trait",
                "type" : "extension"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/variable\/timedeltavariable",
                    "title" : "static let TimeDeltaVariable: Variable",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/variable\/timevariable",
                    "title" : "static let TimeVariable: Variable",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/variable",
                "title" : "Variable",
                "type" : "extension"
              },
              {
                "title" : "Extended Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/poieticflows\/poieticcore\/arithmeticexpression\/valuetype",
                    "title" : "var valueType: ValueType",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/poieticflows\/poieticcore\/arithmeticexpression",
                "title" : "ArithmeticExpression",
                "type" : "extension"
              }
            ],
            "path" : "\/documentation\/poieticflows\/poieticcore",
            "title" : "PoieticCore",
            "type" : "extension"
          }
        ],
        "path" : "\/documentation\/poieticflows",
        "title" : "PoieticFlows",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}